package com.lnt.workers;

import java.awt.List;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;

import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import com.lnt.services.data.RootJson;

@Service
public class WorkerManger {

	private CountDownLatch countDownLatch;

	public ArrayList<RootJson> exectureWorkker(String searchString, String searchUrl, RestTemplate restTemplate) {
		ArrayList<RootJson> arrayList = new ArrayList<>();

		countDownLatch = new CountDownLatch(2);
		ExecutorService executorService = Executors.newFixedThreadPool(2);

		/*
		 * Future<RootJson> youtubeFuture = executorService.submit(new YouTubeThread());
		 * Future<RootJson> cmdcFuture = executorService.submit(new CMDCThread());
		 */

		Future<RootJson> youtubeFuture = executorService
				.submit(new YouTubeWorker(searchString, restTemplate, countDownLatch));
		Future<RootJson> cmdcFuture = executorService.submit(new CMDCWorker(searchUrl, restTemplate, countDownLatch));

		RootJson yJson = null;
		RootJson cJson = null;
		try {
			DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");
			LocalDateTime now = LocalDateTime.now();
			System.out.println("before await " + dtf.format(now));
			countDownLatch.await();
			DateTimeFormatter dtf1 = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");
			LocalDateTime now1 = LocalDateTime.now();
			System.out.println("after await " + dtf1.format(now1));

			yJson = youtubeFuture.get();
			cJson = cmdcFuture.get();
			arrayList.add(yJson);
			arrayList.add(cJson);
			System.out.println("SearchMicroServices.getSearchResult() countDownLatch " + countDownLatch.getCount());
		} catch (InterruptedException | ExecutionException e) {
			e.printStackTrace();
		}

		executorService.shutdown();

		return arrayList;

	}

}
